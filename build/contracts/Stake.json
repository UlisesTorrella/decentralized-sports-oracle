{
  "contractName": "Stake",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "Staking",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "stake",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "isStaking",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"Staking\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isStaking\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Stake.sol\":\"Stake\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Stake.sol\":{\"keccak256\":\"0xa9200109facd52670d002ee160778b8ebb0f41dc3eb1fdc02e59d59cfd6be4e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a47486cba7485b5933cec25c01f5276720f798840c29a06f8a48dbbf9ac7570\",\"dweb:/ipfs/QmWCgUUCGBQQvXj34mxcHbcZSiy8pFMBopB2Bz9BhocNai\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060016000803273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555032600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610444806100a56000396000f3fe6080604052600436106100295760003560e01c80633a4b66f11461002e5780636f49712b1461004c575b600080fd5b610036610089565b6040516100439190610254565b60405180910390f35b34801561005857600080fd5b50610073600480360381019061006e91906102d2565b6101ef565b6040516100809190610254565b60405180910390f35b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16670de0b6b3a76400006040516100da90610356565b60006040518083038185875af1925050503d8060008114610117576040519150601f19603f3d011682016040523d82523d6000602084013e61011c565b606091505b5050905080610160576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610157906103ee565b60405180910390fd5b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167fdb9b42f537e149b1982e6ea42849a17a9f65e5fb6c3629d6874bd3737f45732d60405160405180910390a2600191505090565b6000806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054119050919050565b60008115159050919050565b61024e81610239565b82525050565b60006020820190506102696000830184610245565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061029f82610274565b9050919050565b6102af81610294565b81146102ba57600080fd5b50565b6000813590506102cc816102a6565b92915050565b6000602082840312156102e8576102e761026f565b5b60006102f6848285016102bd565b91505092915050565b600081905092915050565b7f49276d207374616b696e6720746f2062652061207265706f7274657200000000600082015250565b6000610340601c836102ff565b915061034b8261030a565b601c82019050919050565b600061036182610333565b9150819050919050565b600082825260208201905092915050565b7f4661696c656420746f2073656e64206d6f6e65792c20636865636b20796f757260008201527f2066756e64730000000000000000000000000000000000000000000000000000602082015250565b60006103d860268361036b565b91506103e38261037c565b604082019050919050565b60006020820190508181036000830152610407816103cb565b905091905056fea2646970667358221220ba9cc80d1371a25e2b6bee3efc0ac7618d2ae0923c6018dd74a7909824318bcf64736f6c634300080a0033",
  "deployedBytecode": "0x6080604052600436106100295760003560e01c80633a4b66f11461002e5780636f49712b1461004c575b600080fd5b610036610089565b6040516100439190610254565b60405180910390f35b34801561005857600080fd5b50610073600480360381019061006e91906102d2565b6101ef565b6040516100809190610254565b60405180910390f35b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16670de0b6b3a76400006040516100da90610356565b60006040518083038185875af1925050503d8060008114610117576040519150601f19603f3d011682016040523d82523d6000602084013e61011c565b606091505b5050905080610160576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610157906103ee565b60405180910390fd5b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167fdb9b42f537e149b1982e6ea42849a17a9f65e5fb6c3629d6874bd3737f45732d60405160405180910390a2600191505090565b6000806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054119050919050565b60008115159050919050565b61024e81610239565b82525050565b60006020820190506102696000830184610245565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061029f82610274565b9050919050565b6102af81610294565b81146102ba57600080fd5b50565b6000813590506102cc816102a6565b92915050565b6000602082840312156102e8576102e761026f565b5b60006102f6848285016102bd565b91505092915050565b600081905092915050565b7f49276d207374616b696e6720746f2062652061207265706f7274657200000000600082015250565b6000610340601c836102ff565b915061034b8261030a565b601c82019050919050565b600061036182610333565b9150819050919050565b600082825260208201905092915050565b7f4661696c656420746f2073656e64206d6f6e65792c20636865636b20796f757260008201527f2066756e64730000000000000000000000000000000000000000000000000000602082015250565b60006103d860268361036b565b91506103e38261037c565b604082019050919050565b60006020820190508181036000830152610407816103cb565b905091905056fea2646970667358221220ba9cc80d1371a25e2b6bee3efc0ac7618d2ae0923c6018dd74a7909824318bcf64736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3931:6",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "49:48:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "59:32:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "84:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "77:6:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "77:13:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "70:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "70:21:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "59:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "31:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "41:7:6",
                "type": ""
              }
            ],
            "src": "7:90:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "162:50:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "179:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "199:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "184:14:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "184:21:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "172:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "172:34:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "172:34:6"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "150:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "157:3:6",
                "type": ""
              }
            ],
            "src": "103:109:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "310:118:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "320:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "332:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "343:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "328:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "328:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "320:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "394:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "407:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "418:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "403:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "403:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "356:37:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "356:65:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "356:65:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "282:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "294:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "305:4:6",
                "type": ""
              }
            ],
            "src": "218:210:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "474:35:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "484:19:6",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "500:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "494:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "494:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "484:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "467:6:6",
                "type": ""
              }
            ],
            "src": "434:75:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "604:28:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "621:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "624:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "614:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "614:12:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "614:12:6"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "515:117:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "727:28:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "744:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "747:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "737:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "737:12:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "737:12:6"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "638:117:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "806:81:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "816:65:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "831:5:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "838:42:6",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "827:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "827:54:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "816:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "788:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "798:7:6",
                "type": ""
              }
            ],
            "src": "761:126:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "938:51:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "948:35:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "977:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "959:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "959:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "948:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "920:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "930:7:6",
                "type": ""
              }
            ],
            "src": "893:96:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1038:79:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1095:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1104:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1107:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1097:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1097:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1097:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1061:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1086:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1068:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1068:24:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1058:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1058:35:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1051:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1051:43:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1048:63:6"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1031:5:6",
                "type": ""
              }
            ],
            "src": "995:122:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1175:87:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1185:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1207:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1194:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1194:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1185:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1250:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1223:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1223:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1223:33:6"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1153:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1161:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1169:5:6",
                "type": ""
              }
            ],
            "src": "1123:139:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1334:263:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1380:83:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1382:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1382:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1382:79:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1355:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1364:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1351:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1351:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1376:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1347:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1347:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1344:119:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1473:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1488:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1502:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1492:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1517:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1552:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1563:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1548:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1548:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1572:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1527:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1527:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1517:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1304:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1315:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1327:6:6",
                "type": ""
              }
            ],
            "src": "1268:329:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1716:34:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1726:18:6",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "1741:3:6"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "1726:11:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1688:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1693:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "1704:11:6",
                "type": ""
              }
            ],
            "src": "1603:147:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1862:72:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1884:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1892:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1880:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1880:14:6"
                      },
                      {
                        "hexValue": "49276d207374616b696e6720746f2062652061207265706f72746572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1896:30:6",
                        "type": "",
                        "value": "I'm staking to be a reporter"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1873:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1873:54:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1873:54:6"
                }
              ]
            },
            "name": "store_literal_in_memory_1cb67328e9b6e217058130f1d557eb80053651c45bcecea07b043af31e812548",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1854:6:6",
                "type": ""
              }
            ],
            "src": "1756:178:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2103:237:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2113:91:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2196:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2201:2:6",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2120:75:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2120:84:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2113:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2302:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_1cb67328e9b6e217058130f1d557eb80053651c45bcecea07b043af31e812548",
                      "nodeType": "YulIdentifier",
                      "src": "2213:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2213:93:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2213:93:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2315:19:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2326:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2331:2:6",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2322:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2322:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2315:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_1cb67328e9b6e217058130f1d557eb80053651c45bcecea07b043af31e812548_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2091:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2099:3:6",
                "type": ""
              }
            ],
            "src": "1940:400:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2534:191:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2545:154:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2695:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_1cb67328e9b6e217058130f1d557eb80053651c45bcecea07b043af31e812548_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2552:141:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2552:147:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2545:3:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2709:10:6",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "2716:3:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2709:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_1cb67328e9b6e217058130f1d557eb80053651c45bcecea07b043af31e812548__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2521:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2530:3:6",
                "type": ""
              }
            ],
            "src": "2346:379:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2827:73:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2844:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2849:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2837:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2837:19:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2837:19:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2865:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2884:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2889:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2880:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2880:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "2865:11:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2799:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2804:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "2815:11:6",
                "type": ""
              }
            ],
            "src": "2731:169:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3012:119:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3034:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3042:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3030:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3030:14:6"
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e64206d6f6e65792c20636865636b20796f7572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3046:34:6",
                        "type": "",
                        "value": "Failed to send money, check your"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3023:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3023:58:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3023:58:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3102:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3110:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3098:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3098:15:6"
                      },
                      {
                        "hexValue": "2066756e6473",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3115:8:6",
                        "type": "",
                        "value": " funds"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3091:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3091:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3091:33:6"
                }
              ]
            },
            "name": "store_literal_in_memory_60501195f49a0ec497e13b4641dd62469cee3c716623759522df9c44ad21024c",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3004:6:6",
                "type": ""
              }
            ],
            "src": "2906:225:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3283:220:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3293:74:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3359:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3364:2:6",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3300:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3300:67:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3293:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3465:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_60501195f49a0ec497e13b4641dd62469cee3c716623759522df9c44ad21024c",
                      "nodeType": "YulIdentifier",
                      "src": "3376:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3376:93:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3376:93:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3478:19:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3489:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3494:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3485:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3485:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3478:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_60501195f49a0ec497e13b4641dd62469cee3c716623759522df9c44ad21024c_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3271:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3279:3:6",
                "type": ""
              }
            ],
            "src": "3137:366:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3680:248:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3690:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3702:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3713:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3698:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3698:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3690:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3737:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3748:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3733:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3733:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3756:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3762:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3752:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3752:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3726:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3726:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3726:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3782:139:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3916:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_60501195f49a0ec497e13b4641dd62469cee3c716623759522df9c44ad21024c_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3790:124:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3790:131:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3782:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_60501195f49a0ec497e13b4641dd62469cee3c716623759522df9c44ad21024c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3660:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3675:4:6",
                "type": ""
              }
            ],
            "src": "3509:419:6"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_1cb67328e9b6e217058130f1d557eb80053651c45bcecea07b043af31e812548(memPtr) {\n\n        mstore(add(memPtr, 0), \"I'm staking to be a reporter\")\n\n    }\n\n    function abi_encode_t_stringliteral_1cb67328e9b6e217058130f1d557eb80053651c45bcecea07b043af31e812548_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 28)\n        store_literal_in_memory_1cb67328e9b6e217058130f1d557eb80053651c45bcecea07b043af31e812548(pos)\n        end := add(pos, 28)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_1cb67328e9b6e217058130f1d557eb80053651c45bcecea07b043af31e812548__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_1cb67328e9b6e217058130f1d557eb80053651c45bcecea07b043af31e812548_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_60501195f49a0ec497e13b4641dd62469cee3c716623759522df9c44ad21024c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to send money, check your\")\n\n        mstore(add(memPtr, 32), \" funds\")\n\n    }\n\n    function abi_encode_t_stringliteral_60501195f49a0ec497e13b4641dd62469cee3c716623759522df9c44ad21024c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_60501195f49a0ec497e13b4641dd62469cee3c716623759522df9c44ad21024c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_60501195f49a0ec497e13b4641dd62469cee3c716623759522df9c44ad21024c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_60501195f49a0ec497e13b4641dd62469cee3c716623759522df9c44ad21024c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 6,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "67:611:4:-:0;;;190:84;;;;;;;;;;236:1;215:7;:18;223:9;215:18;;;;;;;;;;;;;;;:22;;;;260:9;243:6;;:27;;;;;;;;;;;;;;;;;;67:611;;;;;;",
  "deployedSourceMap": "67:611:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;278:303;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;584:92;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;278:303;320:4;332:12;349:6;;;;;;;;;;;:11;;368:7;349:59;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;331:77;;;450:7;442:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;528:1;506:7;:19;514:10;506:19;;;;;;;;;;;;;;;:23;;;;548:10;540:19;;;;;;;;;;;;572:4;565:11;;;278:303;:::o;584:92::-;639:4;671:1;655:7;:13;663:4;655:13;;;;;;;;;;;;;;;;:17;648:24;;584:92;;;:::o;7:90:6:-;41:7;84:5;77:13;70:21;59:32;;7:90;;;:::o;103:109::-;184:21;199:5;184:21;:::i;:::-;179:3;172:34;103:109;;:::o;218:210::-;305:4;343:2;332:9;328:18;320:26;;356:65;418:1;407:9;403:17;394:6;356:65;:::i;:::-;218:210;;;;:::o;515:117::-;624:1;621;614:12;761:126;798:7;838:42;831:5;827:54;816:65;;761:126;;;:::o;893:96::-;930:7;959:24;977:5;959:24;:::i;:::-;948:35;;893:96;;;:::o;995:122::-;1068:24;1086:5;1068:24;:::i;:::-;1061:5;1058:35;1048:63;;1107:1;1104;1097:12;1048:63;995:122;:::o;1123:139::-;1169:5;1207:6;1194:20;1185:29;;1223:33;1250:5;1223:33;:::i;:::-;1123:139;;;;:::o;1268:329::-;1327:6;1376:2;1364:9;1355:7;1351:23;1347:32;1344:119;;;1382:79;;:::i;:::-;1344:119;1502:1;1527:53;1572:7;1563:6;1552:9;1548:22;1527:53;:::i;:::-;1517:63;;1473:117;1268:329;;;;:::o;1603:147::-;1704:11;1741:3;1726:18;;1603:147;;;;:::o;1756:178::-;1896:30;1892:1;1884:6;1880:14;1873:54;1756:178;:::o;1940:400::-;2099:3;2120:84;2201:2;2196:3;2120:84;:::i;:::-;2113:91;;2213:93;2302:3;2213:93;:::i;:::-;2331:2;2326:3;2322:12;2315:19;;1940:400;;;:::o;2346:379::-;2530:3;2552:147;2695:3;2552:147;:::i;:::-;2545:154;;2716:3;2709:10;;2346:379;;;:::o;2731:169::-;2815:11;2849:6;2844:3;2837:19;2889:4;2884:3;2880:14;2865:29;;2731:169;;;;:::o;2906:225::-;3046:34;3042:1;3034:6;3030:14;3023:58;3115:8;3110:2;3102:6;3098:15;3091:33;2906:225;:::o;3137:366::-;3279:3;3300:67;3364:2;3359:3;3300:67;:::i;:::-;3293:74;;3376:93;3465:3;3376:93;:::i;:::-;3494:2;3489:3;3485:12;3478:19;;3137:366;;;:::o;3509:419::-;3675:4;3713:2;3702:9;3698:18;3690:26;;3762:9;3756:4;3752:20;3748:1;3737:9;3733:17;3726:47;3790:131;3916:4;3790:131;:::i;:::-;3782:139;;3509:419;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.25 <0.8.12;\n\ncontract Stake {\n\tmapping (address => uint) stakers;\n\n  address payable hodler;\n\n\tevent Staking(address indexed staker);\n\n\tconstructor() public {\n\t\tstakers[tx.origin] = 1;\n    hodler = payable(tx.origin);\n\t}\n\n  function stake() external payable returns(bool){\n    (bool success,) = hodler.call{value: 1 ether}(\"I'm staking to be a reporter\"); // cost to enter is 1 MATIC\n    require(success, \"Failed to send money, check your funds\");\n    stakers[msg.sender] = 1;\n    emit Staking(msg.sender);\n    return true;\n  }\n\n\tfunction isStaking(address addr) external view returns(bool){\n\t\treturn stakers[addr] > 0;\n\t}\n}\n",
  "sourcePath": "/home/ulince/Data/Test/Truffle/contracts/Stake.sol",
  "ast": {
    "absolutePath": "project:/contracts/Stake.sol",
    "exportedSymbols": {
      "Stake": [
        573
      ]
    },
    "id": 574,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 495,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".25",
          "<",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:33:4"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Stake",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 573,
        "linearizedBaseContracts": [
          573
        ],
        "name": "Stake",
        "nameLocation": "76:5:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 499,
            "mutability": "mutable",
            "name": "stakers",
            "nameLocation": "111:7:4",
            "nodeType": "VariableDeclaration",
            "scope": 573,
            "src": "85:33:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 498,
              "keyType": {
                "id": 496,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "94:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "85:25:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 497,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "105:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 501,
            "mutability": "mutable",
            "name": "hodler",
            "nameLocation": "139:6:4",
            "nodeType": "VariableDeclaration",
            "scope": 573,
            "src": "123:22:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 500,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "123:15:4",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 505,
            "name": "Staking",
            "nameLocation": "155:7:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 504,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 503,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "179:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 505,
                  "src": "163:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 502,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "163:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "162:24:4"
            },
            "src": "149:38:4"
          },
          {
            "body": {
              "id": 523,
              "nodeType": "Block",
              "src": "211:63:4",
              "statements": [
                {
                  "expression": {
                    "id": 513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 508,
                        "name": "stakers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 499,
                        "src": "215:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 511,
                      "indexExpression": {
                        "expression": {
                          "id": 509,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967270,
                          "src": "223:2:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "223:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "215:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "236:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "215:22:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 514,
                  "nodeType": "ExpressionStatement",
                  "src": "215:22:4"
                },
                {
                  "expression": {
                    "id": 521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 515,
                      "name": "hodler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 501,
                      "src": "243:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 518,
                            "name": "tx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967270,
                            "src": "260:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_transaction",
                              "typeString": "tx"
                            }
                          },
                          "id": 519,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "origin",
                          "nodeType": "MemberAccess",
                          "src": "260:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "252:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 516,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "252:8:4",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 520,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "252:18:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "243:27:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 522,
                  "nodeType": "ExpressionStatement",
                  "src": "243:27:4"
                }
              ]
            },
            "id": 524,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 506,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "201:2:4"
            },
            "returnParameters": {
              "id": 507,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "211:0:4"
            },
            "scope": 573,
            "src": "190:84:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 557,
              "nodeType": "Block",
              "src": "325:256:4",
              "statements": [
                {
                  "assignments": [
                    530,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 530,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "337:7:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 557,
                      "src": "332:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 529,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "332:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 537,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "49276d207374616b696e6720746f2062652061207265706f72746572",
                        "id": 535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "377:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1cb67328e9b6e217058130f1d557eb80053651c45bcecea07b043af31e812548",
                          "typeString": "literal_string \"I'm staking to be a reporter\""
                        },
                        "value": "I'm staking to be a reporter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1cb67328e9b6e217058130f1d557eb80053651c45bcecea07b043af31e812548",
                          "typeString": "literal_string \"I'm staking to be a reporter\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_1cb67328e9b6e217058130f1d557eb80053651c45bcecea07b043af31e812548",
                            "typeString": "literal_string \"I'm staking to be a reporter\""
                          }
                        ],
                        "expression": {
                          "id": 531,
                          "name": "hodler",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 501,
                          "src": "349:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "349:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 534,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "368:7:4",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "349:27:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "349:59:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "331:77:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 539,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 530,
                        "src": "450:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e64206d6f6e65792c20636865636b20796f75722066756e6473",
                        "id": 540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "459:40:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_60501195f49a0ec497e13b4641dd62469cee3c716623759522df9c44ad21024c",
                          "typeString": "literal_string \"Failed to send money, check your funds\""
                        },
                        "value": "Failed to send money, check your funds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_60501195f49a0ec497e13b4641dd62469cee3c716623759522df9c44ad21024c",
                          "typeString": "literal_string \"Failed to send money, check your funds\""
                        }
                      ],
                      "id": 538,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "442:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "442:58:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 542,
                  "nodeType": "ExpressionStatement",
                  "src": "442:58:4"
                },
                {
                  "expression": {
                    "id": 548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 543,
                        "name": "stakers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 499,
                        "src": "506:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 546,
                      "indexExpression": {
                        "expression": {
                          "id": 544,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "514:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "514:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "506:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 547,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "528:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "506:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 549,
                  "nodeType": "ExpressionStatement",
                  "src": "506:23:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 551,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "548:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "548:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 550,
                      "name": "Staking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 505,
                      "src": "540:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "540:19:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 554,
                  "nodeType": "EmitStatement",
                  "src": "535:24:4"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "572:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 528,
                  "id": 556,
                  "nodeType": "Return",
                  "src": "565:11:4"
                }
              ]
            },
            "functionSelector": "3a4b66f1",
            "id": 558,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stake",
            "nameLocation": "287:5:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 525,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "292:2:4"
            },
            "returnParameters": {
              "id": 528,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 527,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 558,
                  "src": "320:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 526,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "320:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "319:6:4"
            },
            "scope": 573,
            "src": "278:303:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 571,
              "nodeType": "Block",
              "src": "644:32:4",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 565,
                        "name": "stakers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 499,
                        "src": "655:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 567,
                      "indexExpression": {
                        "id": 566,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 560,
                        "src": "663:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "655:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 568,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "671:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "655:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 564,
                  "id": 570,
                  "nodeType": "Return",
                  "src": "648:24:4"
                }
              ]
            },
            "functionSelector": "6f49712b",
            "id": 572,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isStaking",
            "nameLocation": "593:9:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 560,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "611:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 572,
                  "src": "603:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 559,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "602:14:4"
            },
            "returnParameters": {
              "id": 564,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 563,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 572,
                  "src": "639:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 562,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "639:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "638:6:4"
            },
            "scope": 573,
            "src": "584:92:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 574,
        "src": "67:611:4",
        "usedErrors": []
      }
    ],
    "src": "32:647:4"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Stake.sol",
    "exportedSymbols": {
      "Stake": [
        573
      ]
    },
    "id": 574,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 495,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".25",
          "<",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:33:4"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Stake",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 573,
        "linearizedBaseContracts": [
          573
        ],
        "name": "Stake",
        "nameLocation": "76:5:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 499,
            "mutability": "mutable",
            "name": "stakers",
            "nameLocation": "111:7:4",
            "nodeType": "VariableDeclaration",
            "scope": 573,
            "src": "85:33:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 498,
              "keyType": {
                "id": 496,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "94:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "85:25:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 497,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "105:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 501,
            "mutability": "mutable",
            "name": "hodler",
            "nameLocation": "139:6:4",
            "nodeType": "VariableDeclaration",
            "scope": 573,
            "src": "123:22:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 500,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "123:15:4",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 505,
            "name": "Staking",
            "nameLocation": "155:7:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 504,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 503,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "179:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 505,
                  "src": "163:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 502,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "163:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "162:24:4"
            },
            "src": "149:38:4"
          },
          {
            "body": {
              "id": 523,
              "nodeType": "Block",
              "src": "211:63:4",
              "statements": [
                {
                  "expression": {
                    "id": 513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 508,
                        "name": "stakers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 499,
                        "src": "215:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 511,
                      "indexExpression": {
                        "expression": {
                          "id": 509,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967270,
                          "src": "223:2:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "223:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "215:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "236:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "215:22:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 514,
                  "nodeType": "ExpressionStatement",
                  "src": "215:22:4"
                },
                {
                  "expression": {
                    "id": 521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 515,
                      "name": "hodler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 501,
                      "src": "243:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 518,
                            "name": "tx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967270,
                            "src": "260:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_transaction",
                              "typeString": "tx"
                            }
                          },
                          "id": 519,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "origin",
                          "nodeType": "MemberAccess",
                          "src": "260:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "252:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 516,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "252:8:4",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 520,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "252:18:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "243:27:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 522,
                  "nodeType": "ExpressionStatement",
                  "src": "243:27:4"
                }
              ]
            },
            "id": 524,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 506,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "201:2:4"
            },
            "returnParameters": {
              "id": 507,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "211:0:4"
            },
            "scope": 573,
            "src": "190:84:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 557,
              "nodeType": "Block",
              "src": "325:256:4",
              "statements": [
                {
                  "assignments": [
                    530,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 530,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "337:7:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 557,
                      "src": "332:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 529,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "332:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 537,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "49276d207374616b696e6720746f2062652061207265706f72746572",
                        "id": 535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "377:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1cb67328e9b6e217058130f1d557eb80053651c45bcecea07b043af31e812548",
                          "typeString": "literal_string \"I'm staking to be a reporter\""
                        },
                        "value": "I'm staking to be a reporter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1cb67328e9b6e217058130f1d557eb80053651c45bcecea07b043af31e812548",
                          "typeString": "literal_string \"I'm staking to be a reporter\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_1cb67328e9b6e217058130f1d557eb80053651c45bcecea07b043af31e812548",
                            "typeString": "literal_string \"I'm staking to be a reporter\""
                          }
                        ],
                        "expression": {
                          "id": 531,
                          "name": "hodler",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 501,
                          "src": "349:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "349:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 534,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "368:7:4",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "349:27:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "349:59:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "331:77:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 539,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 530,
                        "src": "450:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e64206d6f6e65792c20636865636b20796f75722066756e6473",
                        "id": 540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "459:40:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_60501195f49a0ec497e13b4641dd62469cee3c716623759522df9c44ad21024c",
                          "typeString": "literal_string \"Failed to send money, check your funds\""
                        },
                        "value": "Failed to send money, check your funds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_60501195f49a0ec497e13b4641dd62469cee3c716623759522df9c44ad21024c",
                          "typeString": "literal_string \"Failed to send money, check your funds\""
                        }
                      ],
                      "id": 538,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "442:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "442:58:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 542,
                  "nodeType": "ExpressionStatement",
                  "src": "442:58:4"
                },
                {
                  "expression": {
                    "id": 548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 543,
                        "name": "stakers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 499,
                        "src": "506:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 546,
                      "indexExpression": {
                        "expression": {
                          "id": 544,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "514:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "514:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "506:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 547,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "528:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "506:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 549,
                  "nodeType": "ExpressionStatement",
                  "src": "506:23:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 551,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "548:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "548:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 550,
                      "name": "Staking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 505,
                      "src": "540:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "540:19:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 554,
                  "nodeType": "EmitStatement",
                  "src": "535:24:4"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "572:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 528,
                  "id": 556,
                  "nodeType": "Return",
                  "src": "565:11:4"
                }
              ]
            },
            "functionSelector": "3a4b66f1",
            "id": 558,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stake",
            "nameLocation": "287:5:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 525,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "292:2:4"
            },
            "returnParameters": {
              "id": 528,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 527,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 558,
                  "src": "320:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 526,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "320:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "319:6:4"
            },
            "scope": 573,
            "src": "278:303:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 571,
              "nodeType": "Block",
              "src": "644:32:4",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 565,
                        "name": "stakers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 499,
                        "src": "655:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 567,
                      "indexExpression": {
                        "id": 566,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 560,
                        "src": "663:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "655:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 568,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "671:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "655:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 564,
                  "id": 570,
                  "nodeType": "Return",
                  "src": "648:24:4"
                }
              ]
            },
            "functionSelector": "6f49712b",
            "id": 572,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isStaking",
            "nameLocation": "593:9:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 560,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "611:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 572,
                  "src": "603:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 559,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "602:14:4"
            },
            "returnParameters": {
              "id": 564,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 563,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 572,
                  "src": "639:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 562,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "639:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "638:6:4"
            },
            "scope": 573,
            "src": "584:92:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 574,
        "src": "67:611:4",
        "usedErrors": []
      }
    ],
    "src": "32:647:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {
    "80001": {
      "events": {
        "0xdb9b42f537e149b1982e6ea42849a17a9f65e5fb6c3629d6874bd3737f45732d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "staker",
              "type": "address"
            }
          ],
          "name": "Staking",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x8523929e3AD14E844c1cA3EcC190D20A8D51a8Ac",
      "transactionHash": "0x08d2aa548b4ce82ba5c886045ea4404fc9e63aab8b22cd3c568f5a5207935c85"
    },
    "1641315412974": {
      "events": {},
      "links": {},
      "address": "0xE3f1F67986A78eEDcAEaf97724b2D03D8Ce7b1a5",
      "transactionHash": "0xd04c8e3b61c64fe2b8a8341aeef893818cd5d7b50e79e458ecf737b8c7e25464"
    },
    "1641348407715": {
      "events": {},
      "links": {},
      "address": "0xaaD6d70380a3b9E57B34E51c6Faed381d4ee8575",
      "transactionHash": "0x29c7b8c2c72d3db1a71eef49bad936af816dabe7c9fe9941ee0d74d19f6ee57a"
    },
    "1641437936249": {
      "events": {},
      "links": {},
      "address": "0x93E6Bf9EC93bdffC4cCb9a0E3280860Ee8b21D96",
      "transactionHash": "0xd2d638e4f1f2f3242106744f423650ea1ed26885845051dc9919663a7f207693"
    }
  },
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-01-06T03:04:54.771Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}